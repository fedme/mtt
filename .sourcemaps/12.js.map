{"version":3,"sources":["../../src/pages/instructions-check/instructions-check.module.ts","../../src/pages/instructions-check/instructions-check.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AACO;AAW7D;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QATvC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,kFAAqB;aACtB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,kFAAqB,CAAC;gBAC/C,4EAAe,CAAC,QAAQ,EAAE;aAC3B;SACF,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACdE;AACe;AACL;AACI;AAOxD;IAIE,+BACS,OAAsB,EACtB,SAAoB,EACnB,OAAgB;QAFjB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,YAAO,GAAP,OAAO,CAAS;QAGxB,IAAI,CAAC,aAAa,GAAG,IAAI,iEAAS,CAAC;YACjC,eAAe,EAAE,IAAI,mEAAW,EAAE;YAClC,iBAAiB,EAAE,IAAI,mEAAW,EAAE;YACpC,gBAAgB,EAAE,IAAI,mEAAW,EAAE;SACpC,CAAC,CAAC;IAEL,CAAC;IAED;;;OAGG;IAEH,8CAAc,GAAd;QACE,sDAAsD;IACxD,CAAC;IAED,oCAAI,GAAJ;QACE,qBAAqB;QACrB,2DAA2D;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC;YAAC,MAAM,CAAC;QAE3K,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE3D,IAAM,aAAa,GACjB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,SAAS;eACnD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,SAAS;eACxD,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC;QAElG,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,yBAAyB;QACnG,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;YAErC,+EAA+E;YAC/E,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,wCAAwC;YAClH,CAAC;YAGD,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACtC,CAAC;QAEH,CAAC;IAGH,CAAC;IA1DU,qBAAqB;QAJjC,wEAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;WACG;SACvC,CAAC;6EAM+B;YACX,uEAAS;YACV,OAAO;OAPf,qBAAqB,CA4DjC;IAAD,CAAC;AAAA;SA5DY,qBAAqB,gB","file":"12.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InstructionsCheckPage } from './instructions-check';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InstructionsCheckPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(InstructionsCheckPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n})\r\nexport class InstructionsCheckPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/instructions-check/instructions-check.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { Stimuli } from '../../providers/providers';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-instructions-check',\r\n  templateUrl: 'instructions-check.html',\r\n})\r\nexport class InstructionsCheckPage {\r\n\r\n  questionsForm;\r\n\r\n  constructor(\r\n    public navCtrl: NavController, \r\n    public navParams: NavParams,\r\n    private stimuli: Stimuli\r\n  ) {\r\n\r\n    this.questionsForm = new FormGroup({\r\n      \"question-goal\": new FormControl(),\r\n      \"question-fruits\": new FormControl(),\r\n      \"question-cards\": new FormControl(),\r\n    });\r\n    \r\n  }\r\n\r\n  /*doSubmit(event) {\r\n    \r\n    event.preventDefault();\r\n  }*/\r\n\r\n  ionViewDidLoad() {\r\n    //console.log('ionViewDidLoad InstructionsCheckPage');\r\n  }\r\n\r\n  next() {\r\n    //this.navCtrl.pop();\r\n    //console.log('Submitting form', this.questionsForm.value);\r\n    if (this.questionsForm.value[\"question-goal\"] == null || this.questionsForm.value[\"question-fruits\"] == null || this.questionsForm.value[\"question-cards\"] == null) return;\r\n\r\n    this.stimuli.questionsCheck.push(this.questionsForm.value);\r\n\r\n    const answerCorrect = \r\n      this.questionsForm.value[\"question-goal\"] == \"correct\" \r\n      && this.questionsForm.value[\"question-fruits\"] == \"correct\" \r\n      && parseInt(this.questionsForm.value[\"question-cards\"]) == this.stimuli.condition.trainingTasks;\r\n\r\n    if (answerCorrect) {\r\n      this.navCtrl.popTo(this.navCtrl.getByIndex(this.navCtrl.length() - 3)); //go back to the training\r\n    }\r\n    else {\r\n      this.stimuli.questionsCheckCounter++;\r\n\r\n      // If answer is wrong but still have attempts, go to through instructions again\r\n      if (this.stimuli.questionsCheckCounter <= 3) {\r\n        this.navCtrl.popTo(this.navCtrl.getByIndex(this.navCtrl.length() - 2)); //go back to the training instructions 2\r\n      }\r\n\r\n      // Otherwise, fail experiment\r\n      else {\r\n        this.navCtrl.setRoot('FailurePage');\r\n      }\r\n      \r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/instructions-check/instructions-check.ts"],"sourceRoot":""}